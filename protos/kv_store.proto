syntax = "proto3";

// Interface exported by the Key-Value Storage Service.
service KVStoreService {
  // Stores a value v in column c of row r.
  rpc Put(KVPutRequest) returns(KVPutResponse){}

  // Returns the value stored in column c of row r.
  rpc Get(KVGetRequest) returns(KVGetResponse){}

  // Stores value v 2in column c of row r, but only if the current value is v1.
  rpc CPut(KVCPutRequest) returns(KVCPutResponse){}

  // Deletes the value in column c of row r.
  rpc Delete(KVDeleteRequest) returns(KVDeleteResponse){}
}

/* Status of rpc response */
enum KVResStatus {
  SUCCESS = 0;
  FAILURE = 1;
}

/* KVPutRequest  */
message KVPutRequest {
  optional string row = 1;    // [required]
  optional string col = 2;    // [required]
  optional string value = 3;  // [required]
}

/* KVPutResponse  */
message KVPutResponse {
  optional KVResStatus status = 1;   // [required]
  optional string message = 2;
  optional string error_msg = 3;
}

/* KVGetRequest */
message KVGetRequest {
  optional string row = 1;  // [required]
  optional string col = 2;  // [required]
}

/* KVGetResponse */
message KVGetResponse {
  optional KVResStatus status = 1;   // [required]
  optional string message = 2;
  optional string error_msg = 3;
}

/* KVCPutRequest */
message KVCPutRequest {
  optional string row = 1;        // [required]
  optional string col = 2;        // [required]
  optional string prev_value = 3; // [required]
  optional string value = 4;      // [required]
}

/* KVCPutResponse */
message KVCPutResponse {
  optional KVResStatus status = 1;   // [required]
  optional string message = 2;
  optional string error_msg = 3;
}

/* KVDeleteRequest */
message KVDeleteRequest {
  optional string row = 1;  // [required]
  optional string col = 2;  // [required]
}

/* KVDeleteResponse */
message KVDeleteResponse {
  optional KVResStatus status = 1;   // [required]
  optional string message = 2;
  optional string error_msg = 3;
}