{"version":3,"sources":["AllUsers.jsx","ScoresBoard.jsx","Frame.jsx","App.jsx","index.jsx"],"names":["AllUsers","props","lis","list","map","item","Board","name","currentScore","setLogin","setDeleted","localStorage","getItem","setItem","userList","items","Object","entries","forEach","e","push","sort","a","b","type","onClick","removeItem","Frame","useState","questNum","setQestNum","correctNum","setCorrectNum","shuffledQuest","Math","random","handleIncorrect","src","data","image","className","alt","A","B","C","D","App","setName","login","valid","setValid","deleted","handleLogin","match","onSubmit","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fce699aa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AllUsers(props) {\n  const { list } = props;\n  const lis = list.map((item) => (\n    <li>\n      {item[0]}\n      :\n      {item[1]}\n    </li>\n  ));\n\n  return (\n    <div>\n      <h4>\n        Leaders and all other players with scores, ranking from high to low:\n      </h4>\n      <ul>{lis}</ul>\n    </div>\n  );\n}\n\nAllUsers.propTypes = {\n  list: PropTypes.node.isRequired,\n};\n\nexport default AllUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AllUsers from './AllUsers';\n\nfunction Board(props) {\n  const {\n    name, currentScore, setLogin, setDeleted,\n  } = props;\n  if (localStorage.getItem(name) == null) {\n    localStorage.setItem(name, currentScore);\n  } else if (localStorage.getItem(name) < currentScore) {\n    localStorage.setItem(name, currentScore);\n  }\n\n  const handleDelete = () => {\n    localStorage.removeItem(name);\n    // alert(\"Your account was removed\");\n    setDeleted(true);\n    setLogin(false);\n  };\n\n  const userList = [];\n  const items = { ...localStorage };\n  Object.entries(items).forEach((e) => userList.push([e[0], e[1]]));\n  userList.sort((a, b) => b[1] - a[1]);\n\n  return (\n    <div>\n      <h4>\n        Your Account:\n        {name}\n        <br />\n        Your Current Score:\n        {currentScore}\n        <br />\n        Your Best Score:\n        {localStorage.getItem(name)}\n        <br />\n        Best Among All Players:\n        {userList[0][1]}\n      </h4>\n      <button type=\"button\" onClick={handleDelete}>Delete Account</button>\n      <AllUsers list={userList} />\n    </div>\n  );\n}\n\nBoard.propTypes = {\n  name: PropTypes.string.isRequired,\n  currentScore: PropTypes.number.isRequired,\n  setLogin: PropTypes.func.isRequired,\n  setDeleted: PropTypes.func.isRequired,\n};\n\nexport default Board;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport data from './celebrities.json';\nimport './App.css';\nimport Board from './ScoresBoard';\n\nfunction Frame(props) {\n  const { name, setLogin, setDeleted } = props;\n  const [questNum, setQestNum] = useState(0);\n  const [correctNum, setCorrectNum] = useState(0);\n  const questOrder = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  // const shuffledQuest = questOrder.sort(useMemo(() => (Math.random() - 0.5), []));\n  const shuffledQuest = questOrder.sort(() => Math.random() - 0.5);\n  // const a = useMemo(questOrder.sort(() => (Math.random() - 0.5)), []);\n\n  function handleCorrect() {\n    setQestNum(questNum + 1);\n    setCorrectNum(correctNum + 1);\n    // console.log(shuffledQuest);\n    // console.log(a);\n  }\n  function handleIncorrect() {\n    setQestNum(questNum + 1);\n  }\n  return (\n    <div>\n      {questNum < 10 ? (\n        <div>\n          <img\n            src={data[`${shuffledQuest[questNum]}`].image}\n            className=\"image\"\n            alt=\"Celebrity\"\n          />\n          <br />\n          <button type=\"button\" onClick={handleCorrect}>\n            {data[`${shuffledQuest[questNum]}`].A}\n          </button>\n          <br />\n          <button type=\"button\" onClick={handleIncorrect}>\n            {data[`${shuffledQuest[questNum]}`].B}\n          </button>\n          <br />\n          <button type=\"button\" onClick={handleIncorrect}>\n            {data[`${shuffledQuest[questNum]}`].C}\n          </button>\n          <br />\n          <button type=\"button\" onClick={handleIncorrect}>\n            {data[`${shuffledQuest[questNum]}`].D}\n          </button>\n          <h2>\n            Your Current Score:\n            {correctNum}\n            /\n            {questNum}\n          </h2>\n        </div>\n      ) : (\n        <Board\n          name={name}\n          currentScore={correctNum}\n          setLogin={setLogin}\n          setDeleted={setDeleted}\n        />\n      )}\n    </div>\n  );\n}\n\nFrame.propTypes = {\n  name: PropTypes.string.isRequired,\n  setLogin: PropTypes.func.isRequired,\n  setDeleted: PropTypes.func.isRequired,\n};\n\nexport default Frame;\n","import './App.css';\nimport React, { useState } from 'react';\nimport Frame from './Frame';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [login, setLogin] = useState(false);\n  const [valid, setValid] = useState(true);\n  const [deleted, setDeleted] = useState(false);\n  // const nameEl = React.useRef(null);\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleLogin = () => {\n    if (!name.match(/^[a-z0-9]+$/i)) {\n      setValid(false);\n      setName('');\n    } else {\n      setLogin(true);\n      setDeleted(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Guess The Celebrity</h1>\n      {!login ? (\n        <form onSubmit={handleLogin}>\n          <h4>Enter Your Name Here</h4>\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            value={name}\n            onChange={handleChange}\n          />\n          <input type=\"submit\" name=\"Start Quiz\" onClick={handleLogin} />\n        </form>\n      ) : (\n        <div>\n          <Frame name={name} setLogin={setLogin} setDeleted={setDeleted} />\n        </div>\n      )}\n      {!valid && <h4>Invalid User Name!!</h4>}\n      {deleted && <h4>Your account was successfully deleted!</h4>}\n    </div>\n  );\n}\nexport default App;\n\n// const start = document.getElementById(\"start_quiz\");\n// const name = document.getElementById(\"TakerName\");\n// start.onclick = function() {\n//   console.log(name.value);\n// }\n\n// <h3>Enter Your Name Below</h3>\n//       <input id=\"TakerName\" type=\"text\" placeholder=\"Enter Your Name Here\"/>\n//       <br/>\n//       <br/>\n//       <button type=\"button\" id=\"start_quiz\">Start Quiz {'  >>>'}</button>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}